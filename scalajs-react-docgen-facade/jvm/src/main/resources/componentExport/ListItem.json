{
  "description": "A list item can contain a set of items.",
  "displayName": "ListItem",
  "methods": [
    {
      "name": "handleClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "active": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A list item can active."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content.\n\nHeads up!\n\nThis is handled slightly differently than the typical `content` prop since\nthe wrapping ListContent is not used when there's no icon or image.\n\nIf you pass content as:\n- an element/literal, it's treated as the sibling node to\nheader/description (whether wrapped in Item.Content or not).\n- a props object, it forces the presence of Item.Content and passes those\nprops to it. If you pass a content prop within that props object, it\nwill be treated as the sibling node to header/description."
    },
    "description": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for ListDescription."
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A list item can disabled."
    },
    "header": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for ListHeader."
    },
    "icon": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "custom",
            "raw": "customPropTypes.itemShorthand"
          }
        ]
      },
      "required": false,
      "description": "Shorthand for ListIcon."
    },
    "image": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "custom",
            "raw": "customPropTypes.itemShorthand"
          }
        ]
      },
      "required": false,
      "description": "Shorthand for Image."
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "A ListItem can be clicked"
    },
    "value": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "A value for an ordered list."
    }
  },
  "constructorName": "ListItem",
  "type": "element",
  "isParent": false,
  "isChild": true,
  "parentDisplayName": "List",
  "subcomponentName": "Item",
  "subcomponents": null,
  "apiPath": "List.Item",
  "componentClassName": "item",
  "docblock": {
    "tags": [],
    "description": [
      "A list item can contain a set of items."
    ]
  },
  "examplesExist": false,
  "repoPath": "src/elements/List/ListItem.js",
  "filename": "ListItem.js",
  "filenameWithoutExt": "ListItem"
}