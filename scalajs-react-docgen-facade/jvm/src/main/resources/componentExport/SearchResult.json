{
  "description": "",
  "displayName": "SearchResult",
  "methods": [
    {
      "name": "handleClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "active": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "The item currently selected by keyboard shortcut."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "description": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional text with less emphasis."
    },
    "id": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "number"
          },
          {
            "name": "string"
          }
        ]
      },
      "required": false,
      "description": "A unique identifier."
    },
    "image": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Add an image to the item."
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on click.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "price": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Customized text for price."
    },
    "renderer": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Renders the result contents.\n\n@param {object} props - The SearchResult props object.\n@returns {*} - Renderable result contents.",
      "defaultValue": {
        "value": "({ image, price, title, description }) => [\n  image && (\n    <div key='image' className='image'>\n      {createHTMLImage(image, { autoGenerateKey: false })}\n    </div>\n  ),\n  <div key='content' className='content'>\n    {price && <div className='price'>{price}</div>}\n    {title && <div className='title'>{title}</div>}\n    {description && <div className='description'>{description}</div>}\n  </div>,\n]",
        "computed": false
      }
    },
    "title": {
      "type": {
        "name": "string"
      },
      "required": true,
      "description": "Display title."
    }
  },
  "constructorName": "SearchResult",
  "type": "module",
  "isParent": false,
  "isChild": true,
  "parentDisplayName": "Search",
  "subcomponentName": "Result",
  "subcomponents": null,
  "apiPath": "Search.Result",
  "componentClassName": "result",
  "docblock": {
    "tags": [],
    "description": [
      ""
    ]
  },
  "examplesExist": false,
  "repoPath": "src/modules/Search/SearchResult.js",
  "filename": "SearchResult.js",
  "filenameWithoutExt": "SearchResult"
}