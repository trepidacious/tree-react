{
  "description": "A label displays content classification.",
  "displayName": "Label",
  "methods": [
    {
      "name": "handleClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleIconOverrides",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "predefinedProps",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "active": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A label can be active."
    },
    "attached": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "top",
            "computed": false
          },
          {
            "value": "bottom",
            "computed": false
          },
          {
            "value": "top right",
            "computed": false
          },
          {
            "value": "top left",
            "computed": false
          },
          {
            "value": "bottom left",
            "computed": false
          },
          {
            "value": "bottom right",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A label can attach to a content segment."
    },
    "basic": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A label can reduce its complexity."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "circular": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A label can be circular."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "color": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "red",
            "computed": false
          },
          {
            "value": "orange",
            "computed": false
          },
          {
            "value": "yellow",
            "computed": false
          },
          {
            "value": "olive",
            "computed": false
          },
          {
            "value": "green",
            "computed": false
          },
          {
            "value": "teal",
            "computed": false
          },
          {
            "value": "blue",
            "computed": false
          },
          {
            "value": "violet",
            "computed": false
          },
          {
            "value": "purple",
            "computed": false
          },
          {
            "value": "pink",
            "computed": false
          },
          {
            "value": "brown",
            "computed": false
          },
          {
            "value": "grey",
            "computed": false
          },
          {
            "value": "black",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Color of the label."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "corner": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'left'",
                "computed": false
              },
              {
                "value": "'right'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "A label can position itself in the corner of an element."
    },
    "detail": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for LabelDetail."
    },
    "empty": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          }
        ]
      },
      "required": false,
      "description": "Formats the label as a dot."
    },
    "floating": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Float above another element in the upper right corner."
    },
    "horizontal": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A horizontal label is formatted to label content along-side it horizontally."
    },
    "icon": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for Icon."
    },
    "image": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "custom",
            "raw": "customPropTypes.itemShorthand"
          }
        ]
      },
      "required": false,
      "description": "A label can be formatted to emphasize an image or prop can be used as shorthand for Image."
    },
    "onClick": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on click.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onRemove": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Adds an \"x\" icon, called when \"x\" is clicked.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "pointing": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'above'",
                "computed": false
              },
              {
                "value": "'below'",
                "computed": false
              },
              {
                "value": "'left'",
                "computed": false
              },
              {
                "value": "'right'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "A label can point to content next to it."
    },
    "removeIcon": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for Icon to appear as the last child and trigger onRemove."
    },
    "ribbon": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'right'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "A label can appear as a ribbon attaching itself to an element."
    },
    "size": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "mini",
            "computed": false
          },
          {
            "value": "tiny",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "medium",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "big",
            "computed": false
          },
          {
            "value": "huge",
            "computed": false
          },
          {
            "value": "massive",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A label can have different sizes."
    },
    "tag": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A label can appear as a tag."
    }
  },
  "constructorName": "Label",
  "type": "element",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "LabelDetail",
    "LabelGroup"
  ],
  "apiPath": "Label",
  "componentClassName": "label",
  "docblock": {
    "tags": [],
    "description": [
      "A label displays content classification."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/elements/Label/Label.js",
  "filename": "Label.js",
  "filenameWithoutExt": "Label"
}