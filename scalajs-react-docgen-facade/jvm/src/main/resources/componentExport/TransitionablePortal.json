{
  "description": "A sugar for `Portal` and `Transition`.\n@see Portal\n@see Transition",
  "displayName": "TransitionablePortal",
  "methods": [
    {
      "name": "handlePortalClose",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handlePortalOpen",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleTransitionHide",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "nothing",
          "type": null
        },
        {
          "name": "data",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleTransitionStart",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "nothing",
          "type": null
        },
        {
          "name": "data",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "children": {
      "type": {
        "name": "node"
      },
      "required": true,
      "description": "Primary content."
    },
    "onClose": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when a close event happens.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props and internal state."
    },
    "onHide": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on each transition that changes visibility to hidden.\n\n@param {null}\n@param {object} data - All props with transition status and internal state."
    },
    "onOpen": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when an open event happens.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props and internal state."
    },
    "onStart": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on animation start.\n\n@param {null}\n@param {object} data - All props with transition status and internal state."
    },
    "open": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Controls whether or not the portal is displayed."
    },
    "transition": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Transition props.",
      "defaultValue": {
        "value": "{\n  animation: 'scale',\n  duration: 400,\n}",
        "computed": false
      }
    }
  },
  "constructorName": "TransitionablePortal",
  "type": "addon",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "TransitionablePortal",
  "componentClassName": "transitionableportal",
  "docblock": {
    "tags": [
      {
        "title": "see",
        "description": "Portal"
      },
      {
        "title": "see",
        "description": "Transition"
      }
    ],
    "description": [
      "A sugar for `Portal` and `Transition`."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/addons/TransitionablePortal/TransitionablePortal.js",
  "filename": "TransitionablePortal.js",
  "filenameWithoutExt": "TransitionablePortal"
}