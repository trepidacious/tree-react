{
  "description": "A group of cards.",
  "displayName": "CardGroup",
  "methods": [],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "centered": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A group of cards can center itself inside its container."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "doubling": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A group of cards can double its column width for mobile."
    },
    "items": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.collectionShorthand"
      },
      "required": false,
      "description": "Shorthand array of props for Card."
    },
    "itemsPerRow": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          },
          {
            "value": "13",
            "computed": false
          },
          {
            "value": "14",
            "computed": false
          },
          {
            "value": "15",
            "computed": false
          },
          {
            "value": "16",
            "computed": false
          },
          {
            "value": "one",
            "computed": false
          },
          {
            "value": "two",
            "computed": false
          },
          {
            "value": "three",
            "computed": false
          },
          {
            "value": "four",
            "computed": false
          },
          {
            "value": "five",
            "computed": false
          },
          {
            "value": "six",
            "computed": false
          },
          {
            "value": "seven",
            "computed": false
          },
          {
            "value": "eight",
            "computed": false
          },
          {
            "value": "nine",
            "computed": false
          },
          {
            "value": "ten",
            "computed": false
          },
          {
            "value": "eleven",
            "computed": false
          },
          {
            "value": "twelve",
            "computed": false
          },
          {
            "value": "thirteen",
            "computed": false
          },
          {
            "value": "fourteen",
            "computed": false
          },
          {
            "value": "fifteen",
            "computed": false
          },
          {
            "value": "sixteen",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A group of cards can set how many cards should exist in a row."
    },
    "stackable": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A group of cards can automatically stack rows to a single columns on mobile devices."
    },
    "textAlign": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "left",
            "computed": false
          },
          {
            "value": "center",
            "computed": false
          },
          {
            "value": "right",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A card group can adjust its text alignment."
    }
  },
  "constructorName": "CardGroup",
  "type": "view",
  "isParent": false,
  "isChild": true,
  "parentDisplayName": "Card",
  "subcomponentName": "Group",
  "subcomponents": null,
  "apiPath": "Card.Group",
  "componentClassName": "cards",
  "docblock": {
    "tags": [],
    "description": [
      "A group of cards."
    ]
  },
  "examplesExist": false,
  "repoPath": "src/views/Card/CardGroup.js",
  "filename": "CardGroup.js",
  "filenameWithoutExt": "CardGroup"
}