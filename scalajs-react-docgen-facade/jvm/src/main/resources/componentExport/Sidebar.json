{
  "description": "A sidebar hides additional content beside a page.",
  "displayName": "Sidebar",
  "methods": [
    {
      "name": "handleAnimationStart",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleAnimationEnd",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleDocumentClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "animation": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "overlay",
            "computed": false
          },
          {
            "value": "push",
            "computed": false
          },
          {
            "value": "scale down",
            "computed": false
          },
          {
            "value": "uncover",
            "computed": false
          },
          {
            "value": "slide out",
            "computed": false
          },
          {
            "value": "slide along",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Animation style."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "direction": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "top",
            "computed": false
          },
          {
            "value": "right",
            "computed": false
          },
          {
            "value": "bottom",
            "computed": false
          },
          {
            "value": "left",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Direction the sidebar should appear on.",
      "defaultValue": {
        "value": "'left'",
        "computed": false
      }
    },
    "onHide": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called before a sidebar begins to animate out.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onHidden": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called after a sidebar has finished animating out.\n\n@param {null}\n@param {object} data - All props."
    },
    "onShow": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when a sidebar has finished animating in.\n\n@param {null}\n@param {object} data - All props."
    },
    "onVisible": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when a sidebar begins animating in.\n\n@param {null}\n@param {object} data - All props."
    },
    "target": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "custom",
            "raw": "customPropTypes.domNode"
          },
          {
            "name": "custom",
            "raw": "customPropTypes.refObject"
          }
        ]
      },
      "required": false,
      "description": "A sidebar can handle clicks on the passed element."
    },
    "visible": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Controls whether or not the sidebar is visible on the page."
    },
    "width": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "very thin",
            "computed": false
          },
          {
            "value": "thin",
            "computed": false
          },
          {
            "value": "wide",
            "computed": false
          },
          {
            "value": "very wide",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Sidebar width."
    }
  },
  "constructorName": "Sidebar",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "SidebarPushable",
    "SidebarPusher"
  ],
  "apiPath": "Sidebar",
  "componentClassName": "sidebar",
  "docblock": {
    "tags": [],
    "description": [
      "A sidebar hides additional content beside a page."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Sidebar/Sidebar.js",
  "filename": "Sidebar.js",
  "filenameWithoutExt": "Sidebar"
}