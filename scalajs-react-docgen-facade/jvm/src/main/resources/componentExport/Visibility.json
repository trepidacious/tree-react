{
  "description": "Visibility provides a set of callbacks for when a content appears in the viewport.",
  "displayName": "Visibility",
  "methods": [
    {
      "name": "attachHandlers",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "context",
          "type": null
        },
        {
          "name": "updateOn",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "unattachHandlers",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "context",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "execute",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "callback",
          "type": null
        },
        {
          "name": "name",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "fire",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "{ callback, name }",
          "type": null
        },
        {
          "name": "value",
          "type": null
        },
        {
          "name": "reverse",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "fireOnPassed",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleUpdate",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "update",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeCalculations",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "getPageYOffset",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "context": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Context which visibility should attach onscroll events.",
      "defaultValue": {
        "value": "isBrowser() ? window : null",
        "computed": false
      }
    },
    "continuous": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "When set to true a callback will occur anytime an element passes a condition not just immediately after the\nthreshold is met.",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "fireOnMount": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Fires callbacks immediately after mount."
    },
    "onBottomPassed": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's bottom edge has passed top of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onBottomPassedReverse": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's bottom edge has not passed top of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onBottomVisible": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's bottom edge has passed bottom of screen\n\n@param {null}\n@param {object} data - All props."
    },
    "onBottomVisibleReverse": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's bottom edge has not passed bottom of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "offset": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "number"
          },
          {
            "name": "string"
          },
          {
            "name": "arrayOf",
            "value": {
              "name": "union",
              "value": [
                {
                  "name": "number"
                },
                {
                  "name": "string"
                }
              ]
            }
          }
        ]
      },
      "required": false,
      "description": "Value that context should be adjusted in pixels. Useful for making content appear below content fixed to the\npage.",
      "defaultValue": {
        "value": "[0, 0]",
        "computed": false
      }
    },
    "once": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "When set to false a callback will occur each time an element passes the threshold for a condition.",
      "defaultValue": {
        "value": "true",
        "computed": false
      }
    },
    "onPassed": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Element is not visible on the screen."
    },
    "onPassing": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Any part of an element is visible on screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onPassingReverse": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top has not passed top of screen but bottom has.\n\n@param {null}\n@param {object} data - All props."
    },
    "onOffScreen": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element is not visible on the screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onOnScreen": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element is visible on the screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onTopPassed": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top edge has passed top of the screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onTopPassedReverse": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top edge has not passed top of the screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onTopVisible": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top edge has passed bottom of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onTopVisibleReverse": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top edge has not passed bottom of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "onUpdate": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Element's top edge has passed bottom of screen.\n\n@param {null}\n@param {object} data - All props."
    },
    "updateOn": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "events",
            "computed": false
          },
          {
            "value": "repaint",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Allows to choose the mode of the position calculations:\n- `events` - (default) update and fire callbacks only on scroll/resize events\n- `repaint` - update and fire callbacks on browser repaint (animation frames)",
      "defaultValue": {
        "value": "'events'",
        "computed": false
      }
    }
  },
  "constructorName": "Visibility",
  "type": "behavior",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "Visibility",
  "componentClassName": "visibility",
  "docblock": {
    "tags": [],
    "description": [
      "Visibility provides a set of callbacks for when a content appears in the viewport."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/behaviors/Visibility/Visibility.js",
  "filename": "Visibility.js",
  "filenameWithoutExt": "Visibility"
}