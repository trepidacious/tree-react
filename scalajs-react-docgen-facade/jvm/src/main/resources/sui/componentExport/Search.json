{
  "description": "A search module allows a user to query for results from a selection of data",
  "displayName": "Search",
  "methods": [
    {
      "name": "handleResultSelect",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "result",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleSelectionChange",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "closeOnEscape",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "moveSelectionOnKeyDown",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "selectItemOnEnter",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "closeOnDocumentClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleMouseDown",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleDocumentMouseUp",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleInputClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleItemClick",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "{ id }",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleItemMouseDown",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleFocus",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleBlur",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleSearchChange",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "getFlattenedResults",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "getSelectedResult",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "index",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "setValue",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "value",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "moveSelectionBy",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        },
        {
          "name": "offset",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "scrollSelectedItemIntoView",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "tryOpen",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "currentValue",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "open",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "close",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderSearchInput",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "rest",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderNoResults",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderResult",
      "docblock": "Offset is needed for determining the active item for results within a\ncategory. Since the index is reset to 0 for each new category, an offset\nmust be passed in.",
      "modifiers": [],
      "params": [
        {
          "name": "{ childKey, ...result }"
        },
        {
          "name": "index"
        },
        {
          "name": "_array"
        },
        {
          "name": "offset"
        }
      ],
      "returns": null,
      "description": "Offset is needed for determining the active item for results within a\ncategory. Since the index is reset to 0 for each new category, an offset\nmust be passed in."
    },
    {
      "name": "renderResults",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderCategories",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderMenuContent",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderResultsMenu",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "defaultOpen": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Initial value of open."
    },
    "defaultValue": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Initial value."
    },
    "icon": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "node"
          },
          {
            "name": "object"
          }
        ]
      },
      "required": false,
      "description": "Shorthand for Icon.",
      "defaultValue": {
        "value": "'search'",
        "computed": false
      }
    },
    "minCharacters": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Minimum characters to query for results",
      "defaultValue": {
        "value": "1",
        "computed": false
      }
    },
    "noResultsDescription": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Additional text for \"No Results\" message with less emphasis."
    },
    "noResultsMessage": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Message to display when there are no results.",
      "defaultValue": {
        "value": "'No results found.'",
        "computed": false
      }
    },
    "open": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Controls whether or not the results menu is displayed."
    },
    "results": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": "SearchResult.propTypes",
              "computed": true
            }
          },
          {
            "name": "shape",
            "value": "SearchCategory.propTypes",
            "computed": true
          }
        ]
      },
      "required": false,
      "description": "One of:\n- array of Search.Result props e.g. `{ title: '', description: '' }` or\n- object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`"
    },
    "selectFirstResult": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Whether the search should automatically select the first result after searching."
    },
    "showNoResults": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Whether a \"no results\" message should be shown if no results are found.",
      "defaultValue": {
        "value": "true",
        "computed": false
      }
    },
    "value": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Current value of the search input. Creates a controlled component."
    },
    "categoryRenderer": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Renders the SearchCategory contents.\n\n@param {object} props - The SearchCategory props object.\n@returns {*} - Renderable SearchCategory contents."
    },
    "resultRenderer": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Renders the SearchResult contents.\n\n@param {object} props - The SearchResult props object.\n@returns {*} - Renderable SearchResult contents."
    },
    "onBlur": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on blur.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onFocus": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on focus.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onMouseDown": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on mousedown.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onResultSelect": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when a result is selected.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onSearchChange": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on search input change.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props, includes current value of search input."
    },
    "onSelectionChange": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when the active selection index is changed.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "aligned": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "A search can have its results aligned to its left or right container edge."
    },
    "category": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A search can display results from remote content ordered by categories."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "fluid": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A search can have its results take up the width of its container."
    },
    "input": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "A search input can take up the width of its container.",
      "defaultValue": {
        "value": "'text'",
        "computed": false
      }
    },
    "loading": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A search can show a loading indicator."
    },
    "size": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "mini",
            "computed": false
          },
          {
            "value": "tiny",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "big",
            "computed": false
          },
          {
            "value": "huge",
            "computed": false
          },
          {
            "value": "massive",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A search can have different sizes."
    }
  },
  "constructorName": "Search",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "SearchCategory",
    "SearchResult",
    "SearchResults"
  ],
  "apiPath": "Search",
  "componentClassName": "search",
  "docblock": {
    "tags": [],
    "description": [
      "A search module allows a user to query for results from a selection of data"
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Search/Search.js",
  "filename": "Search.js",
  "filenameWithoutExt": "Search"
}