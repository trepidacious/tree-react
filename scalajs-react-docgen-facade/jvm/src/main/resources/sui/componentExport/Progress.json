{
  "description": "A progress bar shows the progression of a task.",
  "displayName": "Progress",
  "methods": [
    {
      "name": "calculatePercent",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeValueText",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "percent",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "getPercent",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "isAutoSuccess",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderLabel",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "renderProgress",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "percent",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "active": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar can show activity."
    },
    "attached": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "top",
            "computed": false
          },
          {
            "value": "bottom",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A progress bar can attach to and show the progress of an element (i.e. Card or Segment)."
    },
    "autoSuccess": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Whether success state should automatically trigger when progress completes."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "color": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "red",
            "computed": false
          },
          {
            "value": "orange",
            "computed": false
          },
          {
            "value": "yellow",
            "computed": false
          },
          {
            "value": "olive",
            "computed": false
          },
          {
            "value": "green",
            "computed": false
          },
          {
            "value": "teal",
            "computed": false
          },
          {
            "value": "blue",
            "computed": false
          },
          {
            "value": "violet",
            "computed": false
          },
          {
            "value": "purple",
            "computed": false
          },
          {
            "value": "pink",
            "computed": false
          },
          {
            "value": "brown",
            "computed": false
          },
          {
            "value": "grey",
            "computed": false
          },
          {
            "value": "black",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A progress bar can have different colors."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar be disabled."
    },
    "error": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar can show a error state."
    },
    "indicating": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "An indicating progress bar visually indicates the current level of progress of a task."
    },
    "inverted": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar can have its colors inverted."
    },
    "label": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Can be set to either to display progress as percent or ratio."
    },
    "percent": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "union",
            "value": [
              {
                "name": "number"
              },
              {
                "name": "string"
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "Current percent complete."
    },
    "precision": {
      "type": {
        "name": "number"
      },
      "required": false,
      "description": "Decimal point precision for calculated progress."
    },
    "progress": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'percent'",
                "computed": false
              },
              {
                "value": "'ratio'",
                "computed": false
              },
              {
                "value": "'value'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "A progress bar can contain a text value indicating current progress."
    },
    "size": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "tiny",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "medium",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "big",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A progress bar can vary in size."
    },
    "success": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar can show a success state."
    },
    "total": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "union",
            "value": [
              {
                "name": "number"
              },
              {
                "name": "string"
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "For use with value. Together, these will calculate the percent. Mutually excludes percent."
    },
    "value": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "union",
            "value": [
              {
                "name": "number"
              },
              {
                "name": "string"
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "For use with total. Together, these will calculate the percent. Mutually excludes percent."
    },
    "warning": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A progress bar can show a warning state."
    }
  },
  "constructorName": "Progress",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "Progress",
  "componentClassName": "progress",
  "docblock": {
    "tags": [],
    "description": [
      "A progress bar shows the progression of a task."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Progress/Progress.js",
  "filename": "Progress.js",
  "filenameWithoutExt": "Progress"
}