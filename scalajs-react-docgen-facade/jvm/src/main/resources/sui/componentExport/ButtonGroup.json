{
  "description": "Buttons can be grouped.",
  "displayName": "ButtonGroup",
  "methods": [],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "attached": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'left'",
                "computed": false
              },
              {
                "value": "'right'",
                "computed": false
              },
              {
                "value": "'top'",
                "computed": false
              },
              {
                "value": "'bottom'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "Groups can be attached to other content."
    },
    "basic": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be less pronounced."
    },
    "buttons": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.collectionShorthand"
      },
      "required": false,
      "description": "Array of shorthand Button values."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "color": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "red",
            "computed": false
          },
          {
            "value": "orange",
            "computed": false
          },
          {
            "value": "yellow",
            "computed": false
          },
          {
            "value": "olive",
            "computed": false
          },
          {
            "value": "green",
            "computed": false
          },
          {
            "value": "teal",
            "computed": false
          },
          {
            "value": "blue",
            "computed": false
          },
          {
            "value": "violet",
            "computed": false
          },
          {
            "value": "purple",
            "computed": false
          },
          {
            "value": "pink",
            "computed": false
          },
          {
            "value": "brown",
            "computed": false
          },
          {
            "value": "grey",
            "computed": false
          },
          {
            "value": "black",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Groups can have a shared color."
    },
    "compact": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can reduce their padding to fit into tighter spaces."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.contentShorthand"
      },
      "required": false,
      "description": "Shorthand for primary content."
    },
    "floated": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "left",
            "computed": false
          },
          {
            "value": "right",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Groups can be aligned to the left or right of its container."
    },
    "fluid": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can take the width of their container."
    },
    "icon": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted as icons."
    },
    "inverted": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted to appear on dark backgrounds."
    },
    "labeled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted as labeled icon buttons."
    },
    "negative": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can hint towards a negative consequence."
    },
    "positive": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can hint towards a positive consequence."
    },
    "primary": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted to show different levels of emphasis."
    },
    "secondary": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted to show different levels of emphasis."
    },
    "size": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "mini",
            "computed": false
          },
          {
            "value": "tiny",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "medium",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "big",
            "computed": false
          },
          {
            "value": "huge",
            "computed": false
          },
          {
            "value": "massive",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Groups can have different sizes."
    },
    "toggle": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted to toggle on and off."
    },
    "vertical": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Groups can be formatted to appear vertically."
    },
    "widths": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "1",
            "computed": false
          },
          {
            "value": "2",
            "computed": false
          },
          {
            "value": "3",
            "computed": false
          },
          {
            "value": "4",
            "computed": false
          },
          {
            "value": "5",
            "computed": false
          },
          {
            "value": "6",
            "computed": false
          },
          {
            "value": "7",
            "computed": false
          },
          {
            "value": "8",
            "computed": false
          },
          {
            "value": "9",
            "computed": false
          },
          {
            "value": "10",
            "computed": false
          },
          {
            "value": "11",
            "computed": false
          },
          {
            "value": "12",
            "computed": false
          },
          {
            "value": "13",
            "computed": false
          },
          {
            "value": "14",
            "computed": false
          },
          {
            "value": "15",
            "computed": false
          },
          {
            "value": "16",
            "computed": false
          },
          {
            "value": "one",
            "computed": false
          },
          {
            "value": "two",
            "computed": false
          },
          {
            "value": "three",
            "computed": false
          },
          {
            "value": "four",
            "computed": false
          },
          {
            "value": "five",
            "computed": false
          },
          {
            "value": "six",
            "computed": false
          },
          {
            "value": "seven",
            "computed": false
          },
          {
            "value": "eight",
            "computed": false
          },
          {
            "value": "nine",
            "computed": false
          },
          {
            "value": "ten",
            "computed": false
          },
          {
            "value": "eleven",
            "computed": false
          },
          {
            "value": "twelve",
            "computed": false
          },
          {
            "value": "thirteen",
            "computed": false
          },
          {
            "value": "fourteen",
            "computed": false
          },
          {
            "value": "fifteen",
            "computed": false
          },
          {
            "value": "sixteen",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Groups can have their widths divided evenly."
    }
  },
  "constructorName": "ButtonGroup",
  "type": "element",
  "isParent": false,
  "isChild": true,
  "parentDisplayName": "Button",
  "subcomponentName": "Group",
  "subcomponents": null,
  "apiPath": "Button.Group",
  "componentClassName": "buttons",
  "docblock": {
    "tags": [],
    "description": [
      "Buttons can be grouped."
    ]
  },
  "examplesExist": false,
  "repoPath": "src/elements/Button/ButtonGroup.js",
  "filename": "ButtonGroup.js",
  "filenameWithoutExt": "ButtonGroup"
}