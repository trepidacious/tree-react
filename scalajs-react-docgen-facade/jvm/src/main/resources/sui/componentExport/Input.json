{
  "description": "An Input is a field used to elicit a response from a user.\n@see Button\n@see Form\n@see Icon\n@see Label",
  "displayName": "Input",
  "methods": [
    {
      "name": "computeIcon",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeTabIndex",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "focus",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "select",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleChange",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleChildOverrides",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "child",
          "type": null
        },
        {
          "name": "defaultProps",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "partitionProps",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "action": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "custom",
            "raw": "customPropTypes.itemShorthand"
          }
        ]
      },
      "required": false,
      "description": "An Input can be formatted to alert the user to an action they may perform."
    },
    "actionPosition": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "left",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "An action can appear along side an Input on the left or right."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "An Input field can show that it is disabled."
    },
    "error": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "An Input field can show the data contains errors."
    },
    "fluid": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Take on the size of its container."
    },
    "focus": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "An Input field can show a user is currently interacting with it."
    },
    "icon": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "custom",
            "raw": "customPropTypes.itemShorthand"
          }
        ]
      },
      "required": false,
      "description": "Optional Icon to display inside the Input."
    },
    "iconPosition": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "left",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "An Icon can appear inside an Input on the left or right."
    },
    "input": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Shorthand for creating the HTML Input."
    },
    "inverted": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Format to appear on dark backgrounds."
    },
    "label": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Optional Label to display along side the Input."
    },
    "labelPosition": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "left",
            "computed": false
          },
          {
            "value": "right",
            "computed": false
          },
          {
            "value": "left corner",
            "computed": false
          },
          {
            "value": "right corner",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "A Label can appear outside an Input on the left or right."
    },
    "loading": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "An Icon Input field can show that it is currently loading data."
    },
    "onChange": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called on change.\n\n@param {ChangeEvent} event - React's original SyntheticEvent.\n@param {object} data - All props and a proposed value."
    },
    "size": {
      "type": {
        "name": "enum",
        "value": [
          {
            "value": "mini",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "big",
            "computed": false
          },
          {
            "value": "huge",
            "computed": false
          },
          {
            "value": "massive",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "An Input can vary in size."
    },
    "tabIndex": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "number"
          },
          {
            "name": "string"
          }
        ]
      },
      "required": false,
      "description": "An Input can receive focus."
    },
    "transparent": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Transparent Input has no background."
    },
    "type": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "The HTML input type.",
      "defaultValue": {
        "value": "'text'",
        "computed": false
      }
    }
  },
  "constructorName": "Input",
  "type": "element",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [],
  "apiPath": "Input",
  "componentClassName": "input",
  "docblock": {
    "tags": [
      {
        "title": "see",
        "description": "Button"
      },
      {
        "title": "see",
        "description": "Form"
      },
      {
        "title": "see",
        "description": "Icon"
      },
      {
        "title": "see",
        "description": "Label"
      }
    ],
    "description": [
      "An Input is a field used to elicit a response from a user."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/elements/Input/Input.js",
  "filename": "Input.js",
  "filenameWithoutExt": "Input"
}