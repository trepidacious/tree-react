{
  "description": "A Popup displays additional information on top of a page.",
  "displayName": "Popup",
  "methods": [
    {
      "name": "getDerivedStateFromProps",
      "docblock": null,
      "modifiers": [
        "static"
      ],
      "params": [
        {
          "name": "props",
          "type": null
        },
        {
          "name": "state",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "getPortalProps",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "hideOnScroll",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleClose",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handleOpen",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handlePortalMount",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "handlePortalUnmount",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "e",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "renderContent",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "{ placement: popperPlacement, ref: popperRef, style: popperStyle }",
          "type": null
        }
      ],
      "returns": null
    }
  ],
  "props": {
    "as": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.as"
      },
      "required": false,
      "description": "An element type to render as (string or function)."
    },
    "basic": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Display the popup without the pointing arrow."
    },
    "children": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Primary content."
    },
    "className": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "Additional classes."
    },
    "content": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Simple text content for the popover."
    },
    "context": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "object"
          },
          {
            "name": "custom",
            "raw": "customPropTypes.refObject"
          }
        ]
      },
      "required": false,
      "description": "Existing element the pop-up should be bound to."
    },
    "disabled": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A disabled popup only renders its trigger.",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "flowing": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "A flowing Popup has no maximum width and continues to flow to fit its content."
    },
    "header": {
      "type": {
        "name": "custom",
        "raw": "customPropTypes.itemShorthand"
      },
      "required": false,
      "description": "Header displayed above the content in bold."
    },
    "hideOnScroll": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Hide the Popup when scrolling the window."
    },
    "hoverable": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Whether the popup should not close on hover."
    },
    "inverted": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Invert the colors of the Popup."
    },
    "offset": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "number"
          },
          {
            "name": "string"
          }
        ]
      },
      "required": false,
      "description": "Offset value to apply to rendered popup. Accepts the following units:\n- px or unit-less, interpreted as pixels\n- %, percentage relative to the length of the trigger element\n- %p, percentage relative to the length of the popup element\n- vw, CSS viewport width unit\n- vh, CSS viewport height unit",
      "defaultValue": {
        "value": "0",
        "computed": false
      }
    },
    "on": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "enum",
            "value": [
              {
                "value": "'hover'",
                "computed": false
              },
              {
                "value": "'click'",
                "computed": false
              },
              {
                "value": "'focus'",
                "computed": false
              }
            ]
          },
          {
            "name": "arrayOf",
            "value": {
              "name": "enum",
              "value": [
                {
                  "value": "'hover'",
                  "computed": false
                },
                {
                  "value": "'click'",
                  "computed": false
                },
                {
                  "value": "'focus'",
                  "computed": false
                }
              ]
            }
          }
        ]
      },
      "required": false,
      "description": "Events triggering the popup.",
      "defaultValue": {
        "value": "'hover'",
        "computed": false
      }
    },
    "onClose": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when a close event happens.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onMount": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when the portal is mounted on the DOM.\n\n@param {null}\n@param {object} data - All props."
    },
    "onOpen": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when an open event happens.\n\n@param {SyntheticEvent} event - React's original SyntheticEvent.\n@param {object} data - All props."
    },
    "onUnmount": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Called when the portal is unmounted from the DOM.\n\n@param {null}\n@param {object} data - All props."
    },
    "position": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "top center",
            "computed": false
          },
          {
            "value": "top left",
            "computed": false
          },
          {
            "value": "top right",
            "computed": false
          },
          {
            "value": "bottom center",
            "computed": false
          },
          {
            "value": "bottom left",
            "computed": false
          },
          {
            "value": "bottom right",
            "computed": false
          },
          {
            "value": "right center",
            "computed": false
          },
          {
            "value": "left center",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Position for the popover.",
      "defaultValue": {
        "value": "'top left'",
        "computed": false
      }
    },
    "size": {
      "type": {
        "name": "enum",
        "computed": true,
        "value": [
          {
            "value": "mini",
            "computed": false
          },
          {
            "value": "tiny",
            "computed": false
          },
          {
            "value": "small",
            "computed": false
          },
          {
            "value": "large",
            "computed": false
          },
          {
            "value": "huge",
            "computed": false
          }
        ]
      },
      "required": false,
      "description": "Popup size."
    },
    "style": {
      "type": {
        "name": "object"
      },
      "required": false,
      "description": "Custom Popup style."
    },
    "trigger": {
      "type": {
        "name": "node"
      },
      "required": false,
      "description": "Element to be rendered in-place where the popup is defined."
    },
    "wide": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "bool"
          },
          {
            "name": "enum",
            "value": [
              {
                "value": "'very'",
                "computed": false
              }
            ]
          }
        ]
      },
      "required": false,
      "description": "Popup width."
    }
  },
  "constructorName": "Popup",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "PopupContent",
    "PopupHeader"
  ],
  "apiPath": "Popup",
  "componentClassName": "popup",
  "docblock": {
    "tags": [],
    "description": [
      "A Popup displays additional information on top of a page."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Popup/Popup.js",
  "filename": "Popup.js",
  "filenameWithoutExt": "Popup"
}