{
  "description": "A transition is an animation usually used to move content in or out of view.",
  "displayName": "Transition",
  "methods": [
    {
      "name": "handleStart",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "handleComplete",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "updateStatus",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeClasses",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeCompletedStatus",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeInitialStatuses",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeNextStatus",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    },
    {
      "name": "computeStatuses",
      "docblock": null,
      "modifiers": [],
      "params": [
        {
          "name": "props",
          "type": null
        }
      ],
      "returns": null
    },
    {
      "name": "computeStyle",
      "docblock": null,
      "modifiers": [],
      "params": [],
      "returns": null
    }
  ],
  "props": {
    "animation": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "enum",
            "computed": true,
            "value": "SUI.TRANSITIONS"
          },
          {
            "name": "string"
          }
        ]
      },
      "required": false,
      "description": "Named animation event to used. Must be defined in CSS.",
      "defaultValue": {
        "value": "'fade'",
        "computed": false
      }
    },
    "children": {
      "type": {
        "name": "element"
      },
      "required": true,
      "description": "Primary content."
    },
    "directional": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Whether it is directional animation event or not. Use it only for custom transitions."
    },
    "duration": {
      "type": {
        "name": "union",
        "value": [
          {
            "name": "number"
          },
          {
            "name": "shape",
            "value": {
              "hide": {
                "name": "number",
                "required": false
              },
              "show": {
                "name": "number",
                "required": false
              }
            }
          },
          {
            "name": "string"
          }
        ]
      },
      "required": false,
      "description": "Duration of the CSS transition animation in milliseconds.",
      "defaultValue": {
        "value": "500",
        "computed": false
      }
    },
    "visible": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Show the component; triggers the enter or exit animation.",
      "defaultValue": {
        "value": "true",
        "computed": false
      }
    },
    "mountOnShow": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Wait until the first \"enter\" transition to mount the component (add it to the DOM).",
      "defaultValue": {
        "value": "true",
        "computed": false
      }
    },
    "onComplete": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on each transition that changes visibility to shown.\n\n@param {null}\n@param {object} data - All props with status."
    },
    "onHide": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on each transition that changes visibility to hidden.\n\n@param {null}\n@param {object} data - All props with status."
    },
    "onShow": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on each transition that changes visibility to shown.\n\n@param {null}\n@param {object} data - All props with status."
    },
    "onStart": {
      "type": {
        "name": "func"
      },
      "required": false,
      "description": "Callback on animation start.\n\n@param {null}\n@param {object} data - All props with status."
    },
    "reactKey": {
      "type": {
        "name": "string"
      },
      "required": false,
      "description": "React's key of the element."
    },
    "transitionOnMount": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Run the enter animation when the component mounts, if it is initially shown.",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "unmountOnHide": {
      "type": {
        "name": "bool"
      },
      "required": false,
      "description": "Unmount the component (remove it from the DOM) when it is not shown.",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    }
  },
  "constructorName": "Transition",
  "type": "module",
  "isParent": true,
  "isChild": false,
  "parentDisplayName": null,
  "subcomponentName": null,
  "subcomponents": [
    "TransitionGroup"
  ],
  "apiPath": "Transition",
  "componentClassName": "transition",
  "docblock": {
    "tags": [],
    "description": [
      "A transition is an animation usually used to move content in or out of view."
    ]
  },
  "examplesExist": true,
  "repoPath": "src/modules/Transition/Transition.js",
  "filename": "Transition.js",
  "filenameWithoutExt": "Transition"
}